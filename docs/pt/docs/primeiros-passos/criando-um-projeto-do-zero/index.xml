<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Beagle – Criando um projeto do zero</title>
    <link>https://zupit.github.io/docs-beagle/pt/docs/primeiros-passos/criando-um-projeto-do-zero/</link>
    <description>Recent content in Criando um projeto do zero on Beagle</description>
    <generator>Hugo -- gohugo.io</generator>
    
	  <atom:link href="https://zupit.github.io/docs-beagle/pt/docs/primeiros-passos/criando-um-projeto-do-zero/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>Docs: Case Android</title>
      <link>https://zupit.github.io/docs-beagle/pt/docs/primeiros-passos/criando-um-projeto-do-zero/case-android/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://zupit.github.io/docs-beagle/pt/docs/primeiros-passos/criando-um-projeto-do-zero/case-android/</guid>
      <description>
        
        
        &lt;hr&gt;
&lt;h2 id=&#34;iniciando-um-projeto-android&#34;&gt;Iniciando um projeto Android&lt;/h2&gt;
&lt;p&gt;Para este exemplo prático, utilizaremos o Android Studio IDE. Caso você ainda não o tenha instalado, basta acessar no &lt;a href=&#34;https://developer.android.com/studio?hl=us-en&#34;&gt;&lt;strong&gt;site oficial do Android&lt;/strong&gt; &lt;/a&gt;e seguir as instruções.&lt;/p&gt;
&lt;p&gt;Depois de ter instalado o programa, siga os passos abaixo:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Passo 1:&lt;/strong&gt; Abra o Android Studio e clique em &lt;strong&gt;Start a new Android Studio project&lt;/strong&gt;&lt;em&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://lh4.googleusercontent.com/bAhbvEZUN_pBXavMOqCvkt2Z4NlYsxXXtmeGRKEUnyGfuIm7c-mskMhmmiMbSaCw_xonW8vceVI2C27q08-k5tV8EDD5ymvoaPwDDFGe_fN3bmoqCQEoAAKASKXOTiI3KUPI1GQ1&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Passo 2:&lt;/strong&gt; Selecione a opção &lt;strong&gt;Empty Activity&lt;/strong&gt; e clique em &lt;strong&gt;next&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://lh5.googleusercontent.com/nT0zkr0W_Ark0ZZDR2eWtCtfnjC_Fm98VSwU3DgBQzcgh_DoqkYNvhINztNL460p0U2hnygJ5K_DhrZMZis0mqHD69QJgKimruICs4MnBnPO9m-m_2T6E1nWIXiOfaIe0iiCjIN3&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Passo 3️:&lt;/strong&gt; Nesta página, devemos listar algumas informações importantes:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Informe o nome do seu projeto. Neste exemplo, chamaremos de &lt;code&gt;BeagleApp&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Selecione qual linguagem utilizará. Para o Beagle, devemos utilizar o&lt;code&gt;Kotlin&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Selecione o &lt;strong&gt;SDK mínimo 19&lt;/strong&gt;, já que qualquer SDK menor que este não será compatível.&lt;/li&gt;
&lt;li&gt;Defina o &lt;strong&gt;package&lt;/strong&gt; e a &lt;strong&gt;Save location&lt;/strong&gt; de acordo com sua preferência.&lt;/li&gt;
&lt;li&gt;Clique em &lt;strong&gt;Next&lt;/strong&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://lh3.googleusercontent.com/m5jnbs4K5AdwQbA7YVn7fSgtVzw5S68yCbGTj_7-CYa9CGvMR-qFO5EQ4SaNehXYRmI4WOOnqA6JQouzW2QC0YMTpBq7kJSbi54yl0Q2emL_y2FizY3LyloLjuh_uDyf8WyVbodP&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Passo 4️:&lt;/strong&gt; Feitas as configurações anteriores, o Android levará um tempo pra construir o projeto porque estará sincronizando todas as dependências inicias para inicializar o projeto&lt;/p&gt;
&lt;p&gt;Quando a inicialização for concluída, você verá esta página:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://zupit.github.io/docs-beagle/docs-beagle/mainactivity.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;


&lt;div class=&#34;alert alert-success&#34; role=&#34;alert&#34;&gt;

Parabéns, seu projeto foi criado no Android! Agora, você precisará configurar o Beagle, de acordo com os passos a seguir.
&lt;/div&gt;

&lt;h2 id=&#34;configurando-o-beagle&#34;&gt;Configurando o Beagle&lt;/h2&gt;
&lt;h3 id=&#34;passo-1-definir-as-dependências&#34;&gt;&lt;strong&gt;Passo 1:&lt;/strong&gt; Definir as dependências&lt;/h3&gt;
&lt;p&gt;Para começar, você precisa configurar as dependências do Beagle no seu repositório. Isso pode ser feito utilizando as configurações abaixo e fazendo o download da biblioteca do Beagle.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Abra o seu projeto no Android Studio.&lt;/li&gt;
&lt;li&gt;Localize o arquivo &lt;code&gt;Graddle scripts&lt;/code&gt; no projeto.&lt;/li&gt;
&lt;li&gt;Nele existem dois arquivos do com o nome &lt;code&gt;gradle&lt;/code&gt;. Abra o primeiro cujo nome é &lt;code&gt;build.graddle(project:Beagle)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Procure o bloco de código  &lt;code&gt;allprojects&lt;/code&gt; e configure as credenciais do &lt;code&gt;Maven&lt;/code&gt; como listadas abaixo.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;// Add it in your root build.gradle at the end of repositories:
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;allprojects&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color:#000&#34;&gt;repositories&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color:#000&#34;&gt;google&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;()&lt;/span&gt;
        &lt;span style=&#34;color:#000&#34;&gt;jcenter&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;()&lt;/span&gt;
        &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;// &amp;lt; 1.1.0
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt;        &lt;span style=&#34;color:#000&#34;&gt;maven&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
            &lt;span style=&#34;color:#000&#34;&gt;url&lt;/span&gt; &lt;span style=&#34;color:#a40000&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;https&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;//dl.bintray.com/zupit/repo&amp;#39;
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt;        &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
        &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;// &amp;gt;= 1.1.0
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt;        &lt;span style=&#34;color:#000&#34;&gt;mavenCentral&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;()&lt;/span&gt;
    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
        
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;Feche o arquivo &lt;code&gt;build.graddle(project:Beagle)&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Feito isso, devemos incluir o &lt;code&gt;kapt plugin&lt;/code&gt; e o &lt;code&gt;Beagle&lt;/code&gt; como dependências no &lt;code&gt;dependency manager&lt;/code&gt;. Para isso, siga estas instruções:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Abra o arquivo &lt;code&gt;build.graddle(Module:app)&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Perceba que alguns &lt;code&gt;plugins&lt;/code&gt; já estão listados no começo desse arquivo como mostrado na figura abaixo&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Em seguida, adicione a linha_&lt;code&gt;apply plugin: &#39;kotlin-kapt&#39;&lt;/code&gt;_&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://zupit.github.io/docs-beagle/docs-beagle/implementacaogradle.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Depois disso, você precisa adicionar algumas dependências. Para isso:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Procure neste arquivo que está mexendo o bloco de código &lt;code&gt;dependencies { }&lt;/code&gt;:&lt;/li&gt;
&lt;li&gt;Adicione a variável &lt;code&gt;ext.beagle_version&lt;/code&gt; logo acima (no caso, fora) do escopo das dependências
&lt;ul&gt;
&lt;li&gt;Versão atual do Beagle&lt;a href=&#34;https://oss.sonatype.org/#nexus-search;gav~br.com.zup.beagle~android~~~~kw,versionexpand&#34;&gt;&lt;img src=&#34;https://img.shields.io/maven-central/v/br.com.zup.beagle/android&#34; alt=&#34;Maven Central&#34;&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Copie e cole as linhas abaixo dentro das dependências :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;implementation &amp;ldquo;br.com.zup.beagle:android:$beagle_version&amp;rdquo;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;kapt &amp;ldquo;br.com.zup.beagle:android-processor:$beagle_version&amp;rdquo;&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;// Add in your app level dependency
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;ext&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;beagle_version&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;${beagle_version}&amp;#34;&lt;/span&gt;
 
&lt;span style=&#34;color:#000&#34;&gt;dependencies&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color:#000&#34;&gt;implementation&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;br.com.zup.beagle:android:$beagle_version&amp;#34;&lt;/span&gt;
    &lt;span style=&#34;color:#000&#34;&gt;kapt&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;br.com.zup.beagle:android-processor:$beagle_version&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class=&#34;alert alert-info&#34; role=&#34;alert&#34;&gt;

&lt;p&gt;Insira a versão de release do Beagle no lugar de &lt;code&gt;${beagle.version}&lt;/code&gt;, ou seja, coloque a versão do Beagle destacada em azul da badge acima, mas sem o &lt;strong&gt;caracter v&lt;/strong&gt; que antecede os números de versão.&lt;/p&gt;
&lt;p&gt;Por exemplo: undefined-&lt;code&gt;ext.beagle.version = &amp;quot;0.2.8&amp;quot;&lt;/code&gt;&lt;/p&gt;

&lt;/div&gt;

&lt;p&gt;Ao final destas configurações, o seu arquivo deverá estar assim:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://zupit.github.io/docs-beagle/docs-beagle/implementacaogradle2.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;heading&#34;&gt;&lt;/h3&gt;
&lt;h3 id=&#34;passo-2-configurar-o-android-manifest&#34;&gt;Passo 2: Configurar o Android Manifest&lt;/h3&gt;
&lt;p&gt;O próximo passo é atualizar o seu projeto no Android Manifest adicionando algumas linhas a este arquivo:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;A permissão de INTERNET para que sua aplicação seja capaz de acessar a internet. &lt;code&gt;&amp;lt;uses-permission android:name=&amp;quot;android.permission.INTERNET&amp;quot; /&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;


&lt;div class=&#34;alert alert-info&#34; role=&#34;alert&#34;&gt;

&lt;p&gt;Se você tiver dificuldade para encontrar este ou qualquer arquivo, basta usar a ferramenta de busca do Android Studio.&lt;/p&gt;
&lt;p&gt;Para habilitá-la, aperte o botão**&lt;code&gt;SHIFT&lt;/code&gt;**do seu teclado duas vezes e a interface de busca aparecerá . Feito isso, é só digitar &lt;code&gt;AndroidManifest&lt;/code&gt; e o Android Studio o localizará.&lt;/p&gt;

&lt;/div&gt;

&lt;pre&gt;&lt;code class=&#34;language-markup&#34; data-lang=&#34;markup&#34;&gt;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;utf-8&amp;quot;?&amp;gt;
&amp;lt;manifest xmlns:android=&amp;quot;http://schemas.android.com/apk/res/android&amp;quot;
    package=&amp;quot;com.example.beagleexamples&amp;quot;&amp;gt;

    &amp;lt;uses-permission android:name=&amp;quot;android.permission.INTERNET&amp;quot; /&amp;gt;

    &amp;lt;application
        ...
        android:usesCleartextTraffic=&amp;quot;true&amp;quot;
        ...
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Uma dica é deixar este arquivo aberto porque vamos usá-lo de novo em outro momento.&lt;/p&gt;


&lt;div class=&#34;alert alert-warning&#34; role=&#34;alert&#34;&gt;

&lt;ul&gt;
&lt;li&gt;O**&lt;code&gt;usesCleartextTraffic:&lt;/code&gt;** indica que o aplicativo pretende usar o tráfego de rede de texto não criptografado, HTTP. O valor padrão para aplicativos que visam o nível de API 27 ou inferior é **&lt;code&gt;true&lt;/code&gt;**. Os aplicativos que têm como alvo o nível de API 28 ou superior são padronizados como **&lt;code&gt;false&lt;/code&gt;**.&lt;/li&gt;
&lt;li&gt;O atributo &lt;strong&gt;&lt;code&gt;android: usesCleartextTraffic = &amp;quot;true&amp;quot;&lt;/code&gt;&lt;/strong&gt; dentro da &lt;code&gt;tag&lt;/code&gt;  &lt;strong&gt;&lt;code&gt;&amp;lt;application&amp;gt;&lt;/code&gt;&lt;/strong&gt; é usado para se comunicar com o BFF local.  Se você pretende &lt;code&gt;depurar&lt;/code&gt; o projeto usando um BFF local, você pode usar essa configuração como uma etapa de configuração rápida.&lt;/li&gt;
&lt;li&gt;No entanto, se você planeja transformar este exemplo em um aplicativo para &lt;code&gt;release&lt;/code&gt;, recomendamos que você use o &lt;code&gt;networkSecurityConfig&lt;/code&gt;, que você pode configurar usando as instruções na &lt;a href=&#34;https://developer.android.com/training/articles/security-config&#34;&gt;&lt;strong&gt;página de desenvolvedores do Android&lt;/strong&gt;&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;/div&gt;

&lt;h3 id=&#34;passo-3-criar-o-appbeagleconfig&#34;&gt;Passo 3: Criar o AppBeagleConfig&lt;/h3&gt;
&lt;p&gt;Em um próximo passos, você deve criar uma classe chamada &lt;code&gt;AppBeagleConfig&lt;/code&gt;. Ela faz parte das configurações iniciais do Beagle e é nela que vamos registrar algumas configurações importantes.&lt;/p&gt;
&lt;p&gt;Ao criá-la, devemos garantir que ela esteja configurada da seguinte forma:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Anotada com o &lt;code&gt;@BeagleComponent&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;E deve &lt;code&gt;estender (extend)&lt;/code&gt; da classe&lt;code&gt;BeagleConfig&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Para criar o AppBeagleConfig, siga estes passos:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Primeiro vamos criar o pacote que conterá nossos arquivos de configuração.&lt;/li&gt;
&lt;li&gt;Clique com botão direito do mouse no pacote principal do seu projeto e click em &lt;strong&gt;new &amp;gt; package&lt;/strong&gt; __conforme a figura abaixo:&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&#34;https://zupit.github.io/docs-beagle/docs-beagle/newpackage.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Embora você possa nomeá-lo como preferir, sugerimos que para este tutorial você use o nome&lt;code&gt;beagle&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;3. Clique com o botão direito do mouse no pacote beagle e clique em **new&amp;amp;gt;Kotlin File/Class**
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;__4. __Nomeie como &lt;code&gt;AppBeagleConfig&lt;/code&gt; e pressione &lt;strong&gt;&lt;code&gt;ENTER&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;ol start=&#34;5&#34;&gt;
&lt;li&gt;Copie e cole as configurações abaixo no arquivo &lt;code&gt;AppBeagleConfig&lt;/code&gt; que acabou de criar. Perceba que ele implementará os atributos: &lt;code&gt;baseUrl, environment, isLoggingEnabled, cache.&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;O &lt;strong&gt;&lt;code&gt;baseUrl&lt;/code&gt;&lt;/strong&gt; retorna a URL base do seu ambiente.&lt;/li&gt;
&lt;li&gt;O**&lt;code&gt;environment&lt;/code&gt;** retorna o _&lt;code&gt;current build state&lt;/code&gt;_ da sua aplicação.&lt;/li&gt;
&lt;li&gt;O **&lt;code&gt;isLoggingEnabled&lt;/code&gt;**retorna a visualização de log da aplicação.&lt;/li&gt;
&lt;li&gt;O &lt;strong&gt;&lt;code&gt;cache&lt;/code&gt;&lt;/strong&gt; configuração de gerenciamento de cache.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-kotlin&#34; data-lang=&#34;kotlin&#34;&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;br.com.zup.beagle.android.annotation.BeagleComponent&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;br.com.zup.beagle.android.setup.BeagleConfig&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;br.com.zup.beagle.android.setup.Cache&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;br.com.zup.beagle.android.setup.Environment&lt;/span&gt;

&lt;span style=&#34;color:#5c35cc;font-weight:bold&#34;&gt;@BeagleComponent&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;AppBeagleConfig&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;BeagleConfig&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;override&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;val&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;baseUrl&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;String&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;get&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;http://10.0.2.2:8080&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;// return the base url based on your environment
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;override&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;val&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;environment&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;Environment&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;get&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;Environment&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;DEBUG&lt;/span&gt; &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;// return the current build state of your app
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;override&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;val&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;isLoggingEnabled&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;Boolean&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;true&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;override&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;val&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;cache&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;Cache&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;get&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;Cache&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;
        &lt;span style=&#34;color:#000&#34;&gt;enabled&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;true&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;// If true, we will cache data on disk and memory.
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt;        &lt;span style=&#34;color:#000&#34;&gt;maxAge&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;300&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;// Time in seconds that memory cache will live.
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt;        &lt;span style=&#34;color:#000&#34;&gt;memoryMaximumCapacity&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;15&lt;/span&gt; &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;// Memory LRU cache size. It represents number of screens that will be in memory.
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;// Cache management configuration
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class=&#34;alert alert-info&#34; role=&#34;alert&#34;&gt;

&lt;p&gt;A partir deste ponto do tutorial, iremos testar nossas telas Server-Driven usando o local host. Por isso, é importante que nossa**&lt;code&gt;baseURL&lt;/code&gt;** seja o seu local host.&lt;/p&gt;
&lt;p&gt;Outro ponto de atenção é que, neste momento, o Beagle espera que classes anotadas com  &lt;code&gt;@BeagleComponent&lt;/code&gt; tenham seus construtores vazios.&lt;/p&gt;

&lt;/div&gt;

&lt;h3 id=&#34;passo-4-criar-o-appbeagleactivity&#34;&gt;&lt;strong&gt;Passo 4: Criar o AppBeagleActivity&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;Você precisará lidar com as &lt;code&gt;activities&lt;/code&gt; que serão geradas via server-driven. Por isso, é necessário &lt;strong&gt;implementar uma Activity&lt;/strong&gt; para gerenciá-las. Para este exemplo, vamos nomeá-la &lt;code&gt;AppBeagleActivity&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Este arquivo faz parte da configuração de uso do Beagle e deve ser implementado pelo menos uma vez para que ela opere normalmente.&lt;/p&gt;
&lt;p&gt;Quando for criar o AppBeagleActivity, lembre-se de anotá-la com &lt;code&gt;BeagleComponent&lt;/code&gt; e estendê-la para classe&lt;code&gt;BeagleActivity&lt;/code&gt;.&lt;/p&gt;


&lt;div class=&#34;alert alert-info&#34; role=&#34;alert&#34;&gt;

Vale lembrar que é muito importante garantir que essa &lt;code&gt;activity&lt;/code&gt; esteja registrada no Android Manifest. Faça isso assim que criá-la.
&lt;/div&gt;

&lt;p&gt;Siga os passos abaixo para criar o AppBeagleActivity, incluindo o arquivo &lt;code&gt;.xml&lt;/code&gt;:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Clique com o botão direito do mouse no pacote Beagle e clique em &lt;strong&gt;New&amp;gt;Activity&amp;gt;Empty Activity&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&#34;https://zupit.github.io/docs-beagle/docs-beagle/newactivity.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;Dê o nome de &lt;code&gt;AppBeagleActivity&lt;/code&gt; para a &lt;code&gt;Activity&lt;/code&gt; e clique em &lt;strong&gt;&lt;code&gt;finish&lt;/code&gt;&lt;/strong&gt;.&lt;/li&gt;
&lt;/ol&gt;


&lt;div class=&#34;alert alert-info&#34; role=&#34;alert&#34;&gt;

A partir daí, o Beagle irá utilizar esta &lt;code&gt;activity&lt;/code&gt; sempre que carregar as informações das tela recebidas do backend no frontend da sua aplicação.
&lt;/div&gt;

&lt;p&gt;Deixamos um exemplo abaixo já configurado para você copiar e colar.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Primeiro localize o layout dessa &lt;code&gt;activity&lt;/code&gt;. Ela provavelmente estará em&lt;code&gt;RES&lt;/code&gt; &amp;gt; &lt;code&gt;LAYOUT&lt;/code&gt; &amp;gt; com o nome de &lt;code&gt;activity_app_beagle.xml&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Copie e cole o conteúdo abaixo &lt;code&gt;.xml&lt;/code&gt; removendo qualquer conteúdo anterior:&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class=&#34;language-markup&#34; data-lang=&#34;markup&#34;&gt;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;utf-8&amp;quot;?&amp;gt;
&amp;lt;LinearLayout
    xmlns:android=&amp;quot;http://schemas.android.com/apk/res/android&amp;quot;
    android:id=&amp;quot;@+id/root_layout&amp;quot;
    android:layout_width=&amp;quot;match_parent&amp;quot;
    android:layout_height=&amp;quot;match_parent&amp;quot;
    android:orientation=&amp;quot;vertical&amp;quot;&amp;gt;

    &amp;lt;androidx.appcompat.widget.Toolbar
        android:id=&amp;quot;@+id/custom_toolbar&amp;quot;
        android:layout_width=&amp;quot;match_parent&amp;quot;
        android:layout_height=&amp;quot;wrap_content&amp;quot; /&amp;gt;
    &amp;lt;FrameLayout
        android:layout_width=&amp;quot;match_parent&amp;quot;
        android:layout_height=&amp;quot;match_parent&amp;quot;&amp;gt;

        &amp;lt;FrameLayout
            android:id=&amp;quot;@+id/server_driven_container&amp;quot;
            android:layout_width=&amp;quot;match_parent&amp;quot;
            android:layout_height=&amp;quot;match_parent&amp;quot; /&amp;gt;
        &amp;lt;ProgressBar
            android:id=&amp;quot;@+id/progress_bar&amp;quot;
            android:layout_width=&amp;quot;42dp&amp;quot;
            android:layout_height=&amp;quot;42dp&amp;quot;
            android:layout_gravity=&amp;quot;center&amp;quot;
            android:visibility=&amp;quot;gone&amp;quot;/&amp;gt;
    &amp;lt;/FrameLayout&amp;gt;
&amp;lt;/LinearLayout&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;Agora abra o arquivo &lt;code&gt;AppBeagleActitivity.kt&lt;/code&gt; e configure como definido abaixo:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-kotlin&#34; data-lang=&#34;kotlin&#34;&gt;&lt;span style=&#34;color:#5c35cc;font-weight:bold&#34;&gt;@BeagleComponent&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;AppBeagleActivity&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;BeagleActivity&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;

    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;private&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;val&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;progressBar&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;ProgressBar&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;by&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;lazy&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;findViewById&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;ProgressBar&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;R&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;id&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;progress_bar&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;private&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;val&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;mToolbar&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;Toolbar&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;by&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;lazy&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;findViewById&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;Toolbar&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;R&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;id&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;custom_toolbar&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;

    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;override&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;fun&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;onCreate&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;savedInstanceState&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;Bundle&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;?)&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;super&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;onCreate&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;savedInstanceState&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;
        &lt;span style=&#34;color:#000&#34;&gt;setContentView&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;R&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;layout&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;activity_app_beagle&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;
    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;

    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;override&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;fun&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;getServerDrivenContainerId&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;():&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;Int&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;R&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;id&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;server_driven_container&lt;/span&gt;

    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;override&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;fun&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;getToolbar&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;():&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;Toolbar&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;mToolbar&lt;/span&gt;

    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;override&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;fun&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;onServerDrivenContainerStateChanged&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;state&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;ServerDrivenState&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;when&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;state&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
            &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;is&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;ServerDrivenState&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;Started&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
                &lt;span style=&#34;color:#000&#34;&gt;progressBar&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;visibility&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt;  &lt;span style=&#34;color:#000&#34;&gt;View&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;VISIBLE&lt;/span&gt;
            &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
            &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;is&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;ServerDrivenState&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;Finished&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
                &lt;span style=&#34;color:#000&#34;&gt;progressBar&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;visibility&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt;  &lt;span style=&#34;color:#000&#34;&gt;View&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;GONE&lt;/span&gt;
            &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
            &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;is&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;ServerDrivenState&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;Error&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
                &lt;span style=&#34;color:#000&#34;&gt;Toast&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;makeText&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;Error&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;Toast&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;LENGTH_LONG&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;).&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;show&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;()&lt;/span&gt;
            &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
        &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class=&#34;alert alert-warning&#34; role=&#34;alert&#34;&gt;

Neste ponto do tutorial, é essencial que você remova a&lt;code&gt;ActionBar&lt;/code&gt; padrão dessa &lt;code&gt;activity&lt;/code&gt; porque, a partir deste momento, será o Beagle que irá gerenciar &lt;code&gt;ActionBar/Toolbar&lt;/code&gt;.
&lt;/div&gt;

&lt;p&gt;Para realizar esta configuração, você deve mudar o seu &lt;code&gt;BeagleActivity&#39;s theme&lt;/code&gt;. Vá até a pasta &lt;code&gt;Resources&lt;/code&gt; na sua aplicação do Android Studio e abra o arquivo &lt;code&gt;STYLE&lt;/code&gt; . Depois, é só Modificar o seu &lt;code&gt;AppTheme&lt;/code&gt; como no exemplo abaixo:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-markup&#34; data-lang=&#34;markup&#34;&gt;&amp;lt;resources&amp;gt;
    &amp;lt;!-- Beagle Activity theme. --&amp;gt;
    &amp;lt;style name=&amp;quot;MyTheme&amp;quot; parent=&amp;quot;Theme.AppCompat.NoActionBar&amp;quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;passo-5-inicializar-o-beagle-e-o-design-system&#34;&gt;Passo 5: Inicializar o Beagle e o Design System&lt;/h3&gt;


&lt;div class=&#34;alert alert-info&#34; role=&#34;alert&#34;&gt;

&lt;p&gt;Importante! O que é o Design System?&lt;/p&gt;
&lt;p&gt;É o &lt;strong&gt;design system&lt;/strong&gt; que guarda os registros dos componentes de estilo criados no frontend e é assim que sua aplicação Android “saberá” qual componente de estilo deve aplicar a cada elemento de uma tela Server-Driven. É na tela server driven que os elementos visuais (views) são utilizados na construção da sua tela.&lt;/p&gt;
&lt;p&gt;Embora você possa criá-lo agora se quiser, não é necessário para as configurações iniciais, para que você possa testar logo o Beagle! Você pode prosseguir sem configurá-lo. Mas saiba que o Design System é o pulmão da aplicação server-driven!&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;design-system-com-beagle-android&#34;&gt;&lt;strong&gt;Design System no Beagle para Android&lt;/strong&gt;.&lt;/a&gt;&lt;/p&gt;

&lt;/div&gt;

&lt;p&gt;Agora, você deve inicializar sua &lt;code&gt;Application&lt;/code&gt; para que o Beagle gere os outros arquivos de configuração que necessita. Para isso, basta clicar em&lt;code&gt;Make project&lt;/code&gt; (símbolo de MARTELO) ou use o comando &lt;code&gt;CTRL + F9&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://zupit.github.io/docs-beagle/docs-beagle/apppackage.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Ao ser inicializado, o Beagle irá criar automaticamente o arquivo &lt;code&gt;BeagleSetup&lt;/code&gt;, que estará na pasta de arquivos gerados como mostrado na figura abaixo:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://zupit.github.io/docs-beagle/docs-beagle/image%20%2843%29.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;passo-6-criar-a-classe-appapplication&#34;&gt;Passo 6: Criar a classe AppApplication&lt;/h3&gt;
&lt;p&gt;Nesta etapa, você precisa criar uma classe&lt;code&gt;KOTLIN&lt;/code&gt; que estenda da classe &lt;code&gt;Application&lt;/code&gt;. Neste exemplo, vamos nomeá-la de &lt;code&gt;AppApplication&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;É preciso realizar algumas configurações para que a pasta cumpra seu papel  de chamar a função &lt;code&gt;BeagleSetup().init(this)&lt;/code&gt; em seu método &lt;code&gt;onCreate&lt;/code&gt;. Siga os passos abaixo:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Clique com o botão direito do mouse no pacote principal do seu projeto &lt;em&gt;(&lt;/em&gt;&lt;strong&gt;beagleapp&lt;/strong&gt;&lt;em&gt;)&lt;/em&gt; e selecione:
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;new&lt;/code&gt; &amp;gt; &lt;code&gt;Kotlin file/class&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Nomeie o arquivo como &lt;code&gt;AppApplication&lt;/code&gt; e aperte &lt;strong&gt;&lt;code&gt;enter&lt;/code&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Configure-a como no exemplo abaixo:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-kotlin&#34; data-lang=&#34;kotlin&#34;&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;AppApplication&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;Application&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;

    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;override&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;fun&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;onCreate&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;super&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;onCreate&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;()&lt;/span&gt;
        &lt;span style=&#34;color:#000&#34;&gt;BeagleSetup&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;().&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;init&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;
    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;Para finalizar a implementação, você deve declarar a classe no &lt;strong&gt;Android Manifest&lt;/strong&gt; que criamos no começo e que já está aberto.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;O nome da sua&lt;code&gt;application&lt;/code&gt; agora é o nome desta classe que você criou. Faça o update do Android Manifest como indicado abaixo:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-markup&#34; data-lang=&#34;markup&#34;&gt;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;utf-8&amp;quot;?&amp;gt;
&amp;lt;manifest xmlns:android=&amp;quot;http://schemas.android.com/apk/res/android&amp;quot;
    package=&amp;quot;com.example.beagleexamples&amp;quot;&amp;gt;

    &amp;lt;uses-permission android:name=&amp;quot;android.permission.INTERNET&amp;quot; /&amp;gt;

    &amp;lt;application
        android:name=&amp;quot;.beagle.AppApplication&amp;quot;
        
        ...
&lt;/code&gt;&lt;/pre&gt;

&lt;div class=&#34;alert alert-success&#34; role=&#34;alert&#34;&gt;

Pronto, a sua aplicação Android está configurada e preparada para usar o Beagle!
&lt;/div&gt;

&lt;p&gt;Tudo o que você precisa agora é &lt;a href=&#34;../../case-backend&#34;&gt;&lt;strong&gt;configurar um backend&lt;/strong&gt; &lt;/a&gt;para responder as requisições da sua aplicação. Feita esta configuração, inicie a sua aplicação e você verá sua primeira tela server-driven!&lt;/p&gt;
&lt;h3 id=&#34;passo-7-exibir-sua-tela-server-driven&#34;&gt;Passo 7: Exibir sua Tela Server-Driven&lt;/h3&gt;
&lt;p&gt;É muito simples exibir uma tela Server-Driven. Agora que toda a configuração do Beagle está pronta, você precisa seguir estes passos:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Abra o arquivo &lt;code&gt;MainActivity.kt&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Declare o &lt;code&gt;intent&lt;/code&gt; como listado abaixo. Ele vai definir o endereço que tem as informações da sua tela no backend que você configurou.&lt;/li&gt;
&lt;li&gt;Copie e cole o &lt;code&gt;intent&lt;/code&gt; listado abaixo no método &lt;code&gt;onCreate&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;val intent = this.newServerDrivenIntent&amp;lt;AppBeagleActivity&amp;gt;(ScreenRequest(&amp;#34;/screen&amp;#34;))
startActivity(intent)
finish()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;Sua&lt;code&gt;MainActivity.kt&lt;/code&gt; deve ficar assim:&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://zupit.github.io/docs-beagle/docs-beagle/print-intent%20%282%29.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Agora basta somente clicar em &lt;strong&gt;&lt;code&gt;Run app&lt;/code&gt;&lt;/strong&gt; e checar sua tela no emulador!&lt;br&gt;
Você verá esta tela:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://zupit.github.io/docs-beagle/docs-beagle/captura-de-tela-2020-06-22-a-s-11.41.12.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;


&lt;div class=&#34;alert alert-success&#34; role=&#34;alert&#34;&gt;

Parabéns, você criou sua primeira tela com Beagle! 🎉
&lt;/div&gt;


      </description>
    </item>
    
    <item>
      <title>Docs: Case ios</title>
      <link>https://zupit.github.io/docs-beagle/pt/docs/primeiros-passos/criando-um-projeto-do-zero/case-ios/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://zupit.github.io/docs-beagle/pt/docs/primeiros-passos/criando-um-projeto-do-zero/case-ios/</guid>
      <description>
        
        
        &lt;hr&gt;
&lt;h2 id=&#34;iniciando-um-projeto-ios&#34;&gt;Iniciando um projeto iOS&lt;/h2&gt;
&lt;p&gt;Para criar um projeto iOS no Beagle, você primeiro precisa ter o Xcode instalado. Caso ainda não o tenha instalado ainda, faça o &lt;a href=&#34;https://apps.apple.com/app/xcode/id497799835&#34;&gt;&lt;strong&gt;download na Mac App Store&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Antes de começar, você primeiro precisar criar um projeto no &lt;code&gt;Xcode&lt;/code&gt;. Para isso, basta abrir o programa e nomear o seu projeto. Para este exemplo, colocaremos como &lt;strong&gt;Beagle Sample.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://zupit.github.io/docs-beagle/docs-beagle/captura-de-tela-2020-04-08-a-s-10.35.19.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Após criar o seu projeto, precisaremos adicionar as dependências. Para isso, usaremos o gerenciador &lt;code&gt;CocoaPods&lt;/code&gt;.&lt;/p&gt;


&lt;div class=&#34;alert alert-info&#34; role=&#34;alert&#34;&gt;

Se você tem alguma dúvida sobre como usar este gerenciador, sugerimos checar a &lt;a href=&#34;https://cocoapods.org/&#34;&gt;&lt;strong&gt;documentação oficial do Cocoa Pods&lt;/strong&gt;&lt;/a&gt;.
&lt;/div&gt;

&lt;h3 id=&#34;passo-1-configurar-o-cocoa-pods&#34;&gt;Passo 1: Configurar o Cocoa Pods&lt;/h3&gt;
&lt;p&gt;Você usará o terminal para instalar o &lt;code&gt;CocoaPods,&lt;/code&gt; para isto abra o terminal e digite &lt;em&gt;&lt;code&gt;sudo gem install cocoapods&lt;/code&gt;&lt;/em&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;sudo gem install cocoapods
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Para configurá-lo, navegue até sua pasta pelo terminal e digite o comando: &lt;em&gt;&lt;code&gt;pod init&lt;/code&gt;&lt;/em&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-swift&#34; data-lang=&#34;swift&#34;&gt;&lt;span style=&#34;color:#000&#34;&gt;pod&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;init&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Depois, abra o folder do projeto usando o comando: &lt;em&gt;&lt;code&gt;open .&lt;/code&gt;&lt;/em&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-swift&#34; data-lang=&#34;swift&#34;&gt;&lt;span style=&#34;color:#000&#34;&gt;open&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Feito isso, você deve selecionar o arquivo &lt;em&gt;&lt;code&gt;podfile&lt;/code&gt;&lt;/em&gt; assim como apresentado na imagem abaixo:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://lh3.googleusercontent.com/3zzsq_UBccpGCwaMfyYGC6KR9v4Dj4GD3LO311IOBocCIlj6N9kLiw8M6M6liCf3RnICjHpZL9Grw0JgylSSdp1jTkun-N8UYazKu7Wy0jkvBBohE6biktoz932oNFZpnf8hLrJK&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Abra o arquivo e adicione as seguintes dependências:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-swift&#34; data-lang=&#34;swift&#34;&gt;&lt;span style=&#34;color:#000&#34;&gt;target&lt;/span&gt; &lt;span style=&#34;color:#a40000&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;Beagle&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;Sample&lt;/span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;do&lt;/span&gt;
    &lt;span style=&#34;color:#000&#34;&gt;pod&lt;/span&gt; &lt;span style=&#34;color:#a40000&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;Beagle&lt;/span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;&amp;#39;&lt;/span&gt;        
    &lt;span style=&#34;color:#000&#34;&gt;pod&lt;/span&gt; &lt;span style=&#34;color:#a40000&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;YogaKit&lt;/span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;git&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#a40000&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;https&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;//github.com/ZupIT/YogaKit&amp;#39;&lt;/span&gt;
&lt;span style=&#34;color:#000&#34;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Abra novamente o terminal e digite o comando: &lt;em&gt;&lt;code&gt;pod install&lt;/code&gt;&lt;/em&gt; para que as dependências sejam instaladas.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-swift&#34; data-lang=&#34;swift&#34;&gt;&lt;span style=&#34;color:#000&#34;&gt;pod&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;install&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Depois da instalação, você deve abrir o arquivo que possui a extensão &lt;strong&gt;&lt;code&gt;workspace.&lt;/code&gt;&lt;/strong&gt; Neste exemplo, nós o chamaremos de &lt;code&gt;Beagle Sample.workspace&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://zupit.github.io/docs-beagle/docs-beagle/captura-de-tela-2020-04-08-a-s-10.23.09.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;passo-2-configurar-o-beagle&#34;&gt;Passo 2: Configurar o Beagle&lt;/h3&gt;
&lt;p&gt;Agora que seu projeto está criado, você deve fazer as configurações do &lt;strong&gt;Beagle&lt;/strong&gt;. Para isso, siga os passos abaixo:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Crie uma classe chamada&lt;code&gt;BeagleConfig&lt;/code&gt; .&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Esta classe será responsável por conter parte da configuração inicial do Beagle. Nela, implementaremos uma função estática &lt;strong&gt;&lt;code&gt;config&lt;/code&gt;&lt;/strong&gt; para aplicar essas configurações.&lt;/p&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;Nesta função crie uma constante chamada &lt;strong&gt;&lt;code&gt;dependency&lt;/code&gt;&lt;/strong&gt; que deve ser do tipo &lt;strong&gt;&lt;code&gt;BeagleDependencies&lt;/code&gt;&lt;/strong&gt;.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;A esta constante serão atribuídas algumas configurações do projeto, como por exemplo, listar a URL base que lista o &lt;code&gt;JSON&lt;/code&gt; a ser utilizado na construção de uma tela server-driven. Para configurar esta constante, use o exemplo abaixo:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-swift&#34; data-lang=&#34;swift&#34;&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;Beagle&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;Foundation&lt;/span&gt;

&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;BeagleConfig&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;static&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;func&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;config&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
        
        &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;let&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;dependencies&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;BeagleDependencies&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;()&lt;/span&gt;
        &lt;span style=&#34;color:#000&#34;&gt;dependencies&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;urlBuilder&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;UrlBuilder&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;
            &lt;span style=&#34;color:#000&#34;&gt;baseUrl&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;URL&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;string&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;http://localhost&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;
        &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;
        &lt;span style=&#34;color:#000&#34;&gt;Beagle&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;dependencies&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;dependencies&lt;/span&gt;
    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Agora, vamos configurar a classe &lt;strong&gt;&lt;code&gt;SceneDelegate&lt;/code&gt;&lt;/strong&gt; para que possamos inicializar nossa aplicação com o Beagle a partir de uma tela via &lt;a href=&#34;../../../../../../principais-conceitos#backend-for-frontend&#34;&gt;&lt;strong&gt;BFF&lt;/strong&gt;:&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Crie a constante &lt;strong&gt;&lt;code&gt;beagleScreen&lt;/code&gt;&lt;/strong&gt;, que irá receber a tela server-driven.&lt;/li&gt;
&lt;li&gt;O argumento &lt;code&gt;init URL&lt;/code&gt; deve conter o endereço da &lt;a href=&#34;../../../../../features/urls#caminho-relativo&#34;&gt;&lt;strong&gt;URL relativa&lt;/strong&gt;&lt;/a&gt; que será criada no backend (BFF). No nosso exemplo a chamaremos de &amp;ldquo;/screen&amp;rdquo;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Siga o exemplo abaixo:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-swift&#34; data-lang=&#34;swift&#34;&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;let&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;beagleScreen&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;Beagle&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;screen&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;remote&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(.&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;init&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;url&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;/screen&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)))&lt;/span&gt;
&lt;span style=&#34;color:#000&#34;&gt;window&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;UIWindow&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;frame&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;UIScreen&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;main&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;bounds&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;color:#000&#34;&gt;window&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;?.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;windowScene&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;windowScene&lt;/span&gt;
&lt;span style=&#34;color:#000&#34;&gt;window&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;?.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;rootViewController&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;beagleScreen&lt;/span&gt;
&lt;span style=&#34;color:#000&#34;&gt;window&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;?.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;makeKeyAndVisible&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Ao final, a classe &lt;strong&gt;&lt;code&gt;SceneDelegate&lt;/code&gt;&lt;/strong&gt; deve ficar assim:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://lh5.googleusercontent.com/JcpliGK0G3QJyLlZIDcwD8X7TZfO7QKEjCcVmWNjX0NHoS8gHl8XOZrSg6dfVntZkusNGmJxRWTa3Ps_xrhCQsIQPOzsFZ375uLqDx1qvuWJWeOnlnQkQy8EkcvMuWhJ6KU8tF-r&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;passo-3-configurar-o-xcode&#34;&gt;Passo 3: Configurar o Xcode&lt;/h3&gt;
&lt;p&gt;Inicialmente, as propriedades do Xcode estão configuradas para que sua aplicação seja iniciada via &lt;code&gt;main.storyboard&lt;/code&gt;. No entanto, agora quem deve iniciar a aplicação é o Beagle e, para que isso ocorra, devemos mudar essas propriedades &lt;strong&gt;apagando&lt;/strong&gt; &lt;strong&gt;as&lt;/strong&gt; &lt;strong&gt;referências&lt;/strong&gt; ligadas ao &lt;code&gt;main.storyboard&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Estas referências estão no main project file, na**&lt;code&gt;Info tab&lt;/code&gt;**, e estão assim organizadas:&lt;/p&gt;
&lt;p&gt;A primeira fica na sessão:&lt;br&gt;
&lt;em&gt;&lt;strong&gt;Custom iOS Target Properties&lt;/strong&gt;&lt;/em&gt; &lt;em&gt;&lt;strong&gt;&amp;gt;&lt;br&gt;
&lt;code&gt;Main storyboard file base name&lt;/code&gt;&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;A segunda fica na sessão:&lt;br&gt;
&lt;em&gt;&lt;strong&gt;&lt;code&gt;Application Scene Manifest&amp;gt;&lt;/code&gt;&lt;/strong&gt;&lt;/em&gt;&lt;br&gt;
&lt;em&gt;&lt;strong&gt;&lt;code&gt;Scene Configuration&lt;/code&gt;&amp;gt;&lt;/strong&gt;&lt;/em&gt;&lt;br&gt;
&lt;em&gt;&lt;strong&gt;&lt;code&gt;Application Session Role&lt;/code&gt; &amp;gt;&lt;br&gt;
&lt;code&gt;Item 0 (Default Configuration)&lt;/code&gt;&amp;gt;&lt;br&gt;
&lt;code&gt;Storyboard name&lt;/code&gt;&lt;/strong&gt;&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;No GIF abaixo, você vê melhor como remover as referências:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://zupit.github.io/docs-beagle/docs-beagle/main%20%282%29.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Feito! O Beagle está configurado na sua aplicação iOS. Agora, tudo o que você precisa é &lt;a href=&#34;../../case-backend&#34;&gt;&lt;strong&gt;configurar um backend&lt;/strong&gt;&lt;/a&gt; para responder as requisições do seu aplicativo server-driven.&lt;/p&gt;
&lt;p&gt;Feita essa configuração, inicie a sua aplicação e você terá sua primeira tela server-driven!&lt;br&gt;
Você verá a tela a seguir:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://zupit.github.io/docs-beagle/docs-beagle/captura_de_tela_2020-04-07_a-s_17-removebg-preview-2-.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Case Web</title>
      <link>https://zupit.github.io/docs-beagle/pt/docs/primeiros-passos/criando-um-projeto-do-zero/case-web/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://zupit.github.io/docs-beagle/pt/docs/primeiros-passos/criando-um-projeto-do-zero/case-web/</guid>
      <description>
        
        
        &lt;hr&gt;
&lt;h2 id=&#34;iniciando-um-projeto-web&#34;&gt;Iniciando um projeto Web&lt;/h2&gt;
&lt;h3 id=&#34;pré-requisitos&#34;&gt;Pré-Requisitos&lt;/h3&gt;
&lt;p&gt;Para criar um projeto com Beagle para Web, confirme se você tem instalado os seguintes programas:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://cli.angular.io/&#34;&gt;&lt;strong&gt;Angular CLI&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Node 10.16 +&lt;/li&gt;
&lt;li&gt;Yarn ou npm&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Para iniciar o projeto é preciso utilizar o Visual Studio Code. Caso ainda não o tenha instalado, você pode baixá-lo no &lt;a href=&#34;https://code.visualstudio.com/&#34;&gt;&lt;strong&gt;site oficial da ferramenta&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Após a instalação, siga os passos de acordo com o framework escolhido:&lt;/p&gt;
&lt;ul class=&#34;nav nav-tabs&#34; id=&#34;t8&#34; role=&#34;tablist&#34;&gt;&lt;li class=&#34;nav-item&#34;&gt;&lt;a data-toggle=&#34;tab&#34; class=&#34;nav-link active&#34; href=&#34;#t8-0&#34; role=&#34;tab&#34; aria-controls=&#34;t8-0&#34; aria-selected=&#34;true&#34;&gt;Angular&lt;/a&gt;&lt;/li&gt;
	  
		&lt;li class=&#34;nav-item&#34;&gt;&lt;a data-toggle=&#34;tab&#34; class=&#34;nav-link&#34; href=&#34;#t8-1&#34; role=&#34;tab&#34; aria-controls=&#34;t8-1&#34;&gt;React&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;div class=&#34;tab-content&#34; id=&#34;t8&#34;&gt;&lt;div id=&#34;t8-0&#34; class=&#34;tab-pane show active&#34; role=&#34;tabpanel&#34; aria-labelledby=&#34;t8-0&#34;&gt;

&lt;p&gt;&lt;p&gt;&lt;strong&gt;Passo 1:&lt;/strong&gt; abra o terminal e use o comando abaixo:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;ng new caseAngular
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Aguarde o CLI terminar a criação do projeto.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://zupit.github.io/docs-beagle/docs-beagle/assets%2F-M-Qy7jZbUpzGRP5GbCZ%2F-M9PRY_vOWaeZoXKLq2p%2F-M9PUdUA5t1QcYXL3XJ7%2Fimage.png?alt=media&amp;amp;token=a3869009-df72-4a8c-940a-e040aa47a77a&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Passo 2:&lt;/strong&gt; entre na pasta do projeto gerado &lt;code&gt;cd caseAngular&lt;/code&gt;, adicione o &lt;strong&gt;Beagle Angular&lt;/strong&gt;  ao seu repositório com um dos comandos abaixo de acordo com seu gerenciador de pacotes:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;npm install --save @zup-it/beagle-angular
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;yarn add @zup-it/beagle-angular
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Agora, aguarde a instalação.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://zupit.github.io/docs-beagle/docs-beagle/assets%2F-M-Qy7jZbUpzGRP5GbCZ%2F-M9PRY_vOWaeZoXKLq2p%2F-M9PYjULyS3UHn633rQT%2Fimage.png?alt=media&amp;amp;token=bec6af4b-c54e-47ae-b72e-bacd0132ba81&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Passo 3:&lt;/strong&gt; digite um desses comandos e aperte o enter:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;yarn beagle init
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;npx beagle init
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;Na pergunta &amp;lsquo;&lt;strong&gt;Would you like to use yarn or npm?&#39;&lt;/strong&gt; Digite a opção que você escolheu para usar como gerenciador, no exemplo será o &lt;code&gt;yarn&lt;/code&gt;, portanto digite &lt;code&gt;yarn&lt;/code&gt;e aperte enter.&lt;/li&gt;
&lt;li&gt;Na pergunta &amp;lsquo;&lt;strong&gt;Path to the beagle module (press enter to use default)&amp;rsquo; -&lt;/strong&gt;  digite qual o caminho do módulo que será usado para o Beagle, como o projeto foi criado agora, não há módulos ainda, portanto aperte enter sem informar nada.&lt;/li&gt;
&lt;li&gt;Na pergunta &amp;lsquo;&lt;strong&gt;Path to the module with the components to use with beagle (press enter to use default)&amp;rsquo; -&lt;/strong&gt; digite qual o caminho do módulo que será usado para o Beagle, como o projeto foi criado agora, não há módulos ainda, portanto aperte enter sem informar nada.&lt;/li&gt;
&lt;li&gt;Na pergunta &amp;lsquo;&lt;strong&gt;What&amp;rsquo;s the base url of the backend providing your beagle JSONs? (press enter to use default)&amp;rsquo; -&lt;/strong&gt; digite qual será a URL base do backend que será utilizada para resgatar os JSONs, aqui será usada o mockyio, então digite &lt;code&gt;https://www.mocky.io/v2/&lt;/code&gt;e aperte enter. Aguarde a configuração terminar:&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://zupit.github.io/docs-beagle/docs-beagle/assets%2F-M-Qy7jZbUpzGRP5GbCZ%2F-M9PRY_vOWaeZoXKLq2p%2F-M9Par3gM73EiZtMPE5T%2Fimage.png?alt=media&amp;amp;token=fa081171-d619-4de9-b0f6-8b8173e7dffb&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Foram criados dois arquivos em seu projeto &lt;code&gt;beagle-components.module.ts&lt;/code&gt; e &lt;code&gt;beagle.module.ts&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
  &lt;div id=&#34;t8-1&#34; class=&#34;tab-pane&#34; role=&#34;tabpanel&#34; aria-labelledby=&#34;t8-1&#34;&gt;

&lt;p&gt;&lt;p&gt;&lt;strong&gt;Passo 1:&lt;/strong&gt; abra o terminal e digite um dos comandos abaixo:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;npx create-react-app case-react --template typescript
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;ou&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;yarn create react-app case-react --template typescript
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://zupit.github.io/docs-beagle/docs-beagle/image%20%2811%29.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Passo 2:&lt;/strong&gt; acesse a pasta do projeto &lt;code&gt;cd case-react&lt;/code&gt; e adicione o &lt;strong&gt;Beagle React&lt;/strong&gt; ao seu repositório. No terminal digite:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;npm install --save @zup-it/beagle-react
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;ou&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;yarn add @zup-it/beagle-react
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;e aguarde a instalação finalizar.&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;h2 id=&#34;configuração&#34;&gt;Configuração&lt;/h2&gt;
&lt;p&gt;Agora é hora de configurar os arquivos do Beagle dentro da sua aplicação, siga as instruções:&lt;/p&gt;
&lt;ul class=&#34;nav nav-tabs&#34; id=&#34;t9&#34; role=&#34;tablist&#34;&gt;&lt;li class=&#34;nav-item&#34;&gt;&lt;a data-toggle=&#34;tab&#34; class=&#34;nav-link active&#34; href=&#34;#t9-0&#34; role=&#34;tab&#34; aria-controls=&#34;t9-0&#34; aria-selected=&#34;true&#34;&gt;Angular&lt;/a&gt;&lt;/li&gt;
	  
		&lt;li class=&#34;nav-item&#34;&gt;&lt;a data-toggle=&#34;tab&#34; class=&#34;nav-link&#34; href=&#34;#t9-1&#34; role=&#34;tab&#34; aria-controls=&#34;t9-1&#34;&gt;React&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;div class=&#34;tab-content&#34; id=&#34;t9&#34;&gt;&lt;div id=&#34;t9-0&#34; class=&#34;tab-pane show active&#34; role=&#34;tabpanel&#34; aria-labelledby=&#34;t9-0&#34;&gt;

&lt;p&gt;&lt;p&gt;Abra o arquivo &lt;code&gt;app.module.ts&lt;/code&gt; e importe o módulo Beagle que acabou de ser gerado:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;...
import { Beagle } from &amp;#39;./beagle.module&amp;#39;;

@NgModule({
  declarations: [
    AppComponent
  ],
  imports: [
    BrowserModule,
    Beagle
  ],
  providers: [],
  bootstrap: [AppComponent]
})
export class AppModule { }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Abra o arquivo beagle.module.ts e coloque o caminho &lt;code&gt;baseUrl&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;import { BeagleModule } from &amp;#39;@zup-it/beagle-angular&amp;#39;
// import all the components you wish to use with Beagle.

@BeagleModule({
  baseUrl: &amp;#39;http://localhost:4200/assets&amp;#39;,
  module: {
    path: &amp;#39;./beagle-components.module&amp;#39;,
    name: &amp;#39;BeagleComponentsModule&amp;#39;,
  },
  components: {
    // Associate every beagle component to your angular component.
  },
})
export class Beagle {}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
  &lt;div id=&#34;t9-1&#34; class=&#34;tab-pane&#34; role=&#34;tabpanel&#34; aria-labelledby=&#34;t9-1&#34;&gt;

&lt;p&gt;&lt;p&gt;No caminho &lt;code&gt;/src&lt;/code&gt; crie uma outra pasta com o nome &lt;strong&gt;beagle&lt;/strong&gt; e dentro dela um novo arquivo chamado &lt;code&gt;beagle-service.ts&lt;/code&gt;Sua estrutura deve estar parecida com a imagem a seguir:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://zupit.github.io/docs-beagle/docs-beagle/image%20%2863%29.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Agora, abra o arquivo criado &lt;code&gt;beagle-service.ts&lt;/code&gt; e copie o código:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;import { createBeagleUIService } from &amp;#39;@zup-it/beagle-react&amp;#39;

export default createBeagleUIService({
  baseUrl: &amp;#34;&amp;#34;,
  components: {}
})
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h3 id=&#34;criando-o-json-para-ser-renderizado&#34;&gt;Criando o JSON para ser renderizado&lt;/h3&gt;
&lt;p&gt;Agora é preciso um JSON para renderizar os componentes, normalmente a chamada seria feita para um servidor externo que  retornaria o JSON, mas neste exemplo um arquivo local será criado para ser acessado como teste:&lt;/p&gt;
&lt;ul class=&#34;nav nav-tabs&#34; id=&#34;t10&#34; role=&#34;tablist&#34;&gt;&lt;li class=&#34;nav-item&#34;&gt;&lt;a data-toggle=&#34;tab&#34; class=&#34;nav-link active&#34; href=&#34;#t10-0&#34; role=&#34;tab&#34; aria-controls=&#34;t10-0&#34; aria-selected=&#34;true&#34;&gt;Angular&lt;/a&gt;&lt;/li&gt;
	  
		&lt;li class=&#34;nav-item&#34;&gt;&lt;a data-toggle=&#34;tab&#34; class=&#34;nav-link&#34; href=&#34;#t10-1&#34; role=&#34;tab&#34; aria-controls=&#34;t10-1&#34;&gt;React&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;div class=&#34;tab-content&#34; id=&#34;t10&#34;&gt;&lt;div id=&#34;t10-0&#34; class=&#34;tab-pane show active&#34; role=&#34;tabpanel&#34; aria-labelledby=&#34;t10-0&#34;&gt;

&lt;p&gt;&lt;p&gt;No seu projeto angular navegue até a pasta &lt;code&gt;src/assets&lt;/code&gt; e crie um novo arquivo com o nome &lt;code&gt;payload.json&lt;/code&gt;. Insira neste arquivo o conteúdo do &lt;code&gt;JSON&lt;/code&gt; abaixo.&lt;/p&gt;
&lt;/div&gt;
  &lt;div id=&#34;t10-1&#34; class=&#34;tab-pane&#34; role=&#34;tabpanel&#34; aria-labelledby=&#34;t10-1&#34;&gt;

&lt;p&gt;&lt;p&gt;No seu projeto react navegue até a pasta &lt;code&gt;/public&lt;/code&gt;e crie um novo arquivo com o nome &lt;code&gt;payload.json&lt;/code&gt;. Insira neste arquivo o conteúdo do &lt;code&gt;JSON&lt;/code&gt; abaixo:&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;{
    &amp;#34;_beagleComponent_&amp;#34;: &amp;#34;beagle:container&amp;#34;,
    &amp;#34;children&amp;#34;: [
        {
            &amp;#34;_beagleComponent_&amp;#34;:&amp;#34;beagle:text&amp;#34;,
            &amp;#34;text&amp;#34;:&amp;#34;Hello Beagle&amp;#34;
        },
       {
            &amp;#34;_beagleComponent_&amp;#34;:&amp;#34;beagle:text&amp;#34;,
            &amp;#34;style&amp;#34;:{
              &amp;#34;padding&amp;#34;:{
                &amp;#34;top&amp;#34;:{
                  &amp;#34;value&amp;#34;:10,
                  &amp;#34;type&amp;#34;: &amp;#34;REAL&amp;#34;
                }
              }
            },
            &amp;#34;text&amp;#34;:&amp;#34;Beagle is a cross-platform framework which provides usage of the server Driven UI concept, natively in iOS, Android and Web applications. By using Beagle, your team could easily change application&amp;#39;s layout and data by just changing backend code&amp;#34;
        }
    ]
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;renderizando-os-componentes&#34;&gt;Renderizando os componentes&lt;/h3&gt;
&lt;p&gt;Agora é necessário adicionar na aplicação o local onde os componentes serão renderizados via &lt;code&gt;JSON&lt;/code&gt;. A biblioteca Beagle fornece um componente com essa funcionalidade o Beagle remote view, siga os passos para configurar:&lt;/p&gt;
&lt;ul class=&#34;nav nav-tabs&#34; id=&#34;t11&#34; role=&#34;tablist&#34;&gt;&lt;li class=&#34;nav-item&#34;&gt;&lt;a data-toggle=&#34;tab&#34; class=&#34;nav-link active&#34; href=&#34;#t11-0&#34; role=&#34;tab&#34; aria-controls=&#34;t11-0&#34; aria-selected=&#34;true&#34;&gt;Angular&lt;/a&gt;&lt;/li&gt;
	  
		&lt;li class=&#34;nav-item&#34;&gt;&lt;a data-toggle=&#34;tab&#34; class=&#34;nav-link&#34; href=&#34;#t11-1&#34; role=&#34;tab&#34; aria-controls=&#34;t11-1&#34;&gt;React&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;div class=&#34;tab-content&#34; id=&#34;t11&#34;&gt;&lt;div id=&#34;t11-0&#34; class=&#34;tab-pane show active&#34; role=&#34;tabpanel&#34; aria-labelledby=&#34;t11-0&#34;&gt;

&lt;p&gt;&lt;p&gt;Abra o arquivo &lt;code&gt;app.component.html&lt;/code&gt; e substitua todo o conteúdo pelo código a seguir:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&amp;lt;beagle-remote-view route=&amp;#34;/payload.json&amp;#34;&amp;gt;&amp;lt;/beagle-remote-view&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;route&lt;/code&gt; no código acima diz qual a rota será carregada.  A URL especificada aqui é relativa à &lt;code&gt;baseUrl&lt;/code&gt; declarada na configuração.&lt;/p&gt;
&lt;div class=&#34;alert alert-warning&#34; role=&#34;alert&#34;&gt;
&lt;p&gt;O parâmetro &lt;code&gt;route&lt;/code&gt; é válido apenas para a versão 1.3 ou superior. Para versões anteriores, &lt;code&gt;loadParams&lt;/code&gt; deve ser usado. &lt;code&gt;loadParams&lt;/code&gt;é um objeto e o valor equivalente  ao desse exemplo seria&lt;code&gt;{ path: &amp;lsquo;/payload.json&amp;rsquo; }.&lt;/code&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
  &lt;div id=&#34;t11-1&#34; class=&#34;tab-pane&#34; role=&#34;tabpanel&#34; aria-labelledby=&#34;t11-1&#34;&gt;

&lt;p&gt;&lt;p&gt;Abra o arquivo &lt;code&gt;App.tsx&lt;/code&gt; onde o &lt;code&gt;JSON&lt;/code&gt; será renderizado e altere para ficar como o exemplo a seguir:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;import React from &amp;#39;react&amp;#39;;
import &amp;#39;./App.css&amp;#39;;
import { BeagleProvider, BeagleRemoteView } from &amp;#39;@zup-it/beagle-react&amp;#39;;
import BeagleService from &amp;#39;./beagle/beagle-service&amp;#39;;

function App() {
  return (
    &amp;lt;BeagleProvider value={BeagleService}&amp;gt;
      &amp;lt;BeagleRemoteView route={&amp;#39;/payload.json&amp;#39;} /&amp;gt;
    &amp;lt;/BeagleProvider&amp;gt;
  );
}

export default App;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Neste passo apontamos onde queremos renderizar nosso layout definidos no arquivo &lt;code&gt;payload.json&lt;/code&gt;. Temos aqui dois componentes fornecidos pela biblioteca beagle:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;BeagleProvider&amp;gt;&lt;/code&gt; Recebe uma propriedade &lt;code&gt;value&lt;/code&gt; com o &lt;code&gt;beagle-service&lt;/code&gt; criado no passo anterior que contém as configurações iniciais&lt;/p&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;BeagleRemoteView&amp;gt;&lt;/code&gt; Recebe uma propriedade &lt;code&gt;route&lt;/code&gt; que é o caminho do nosso arquivo JSON, note aqui que adicionamos &lt;strong&gt;&#39; / &amp;lsquo;&lt;/strong&gt; pois esse valor será concatenado com o &lt;code&gt;baseUrl&lt;/code&gt; definido no arquivo &lt;code&gt;beagle-service.ts.&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;alert alert-warning&#34; role=&#34;alert&#34;&gt;
&lt;p&gt;&lt;code&gt;route&lt;/code&gt; no &lt;code&gt;BeagleRemoteView&lt;/code&gt; só é válido para as versões 1.3 e superior. Para versões anteriores, por favor, use &lt;code&gt;path.&lt;/code&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;h2 id=&#34;testando-a-aplicação&#34;&gt;Testando a aplicação&lt;/h2&gt;
&lt;p&gt;Depois de finalizar a configuração básica do projeto, agora é preciso rodar um dos comandos abaixo para inicializar a aplicação:&lt;/p&gt;
&lt;ul class=&#34;nav nav-tabs&#34; id=&#34;t12&#34; role=&#34;tablist&#34;&gt;&lt;li class=&#34;nav-item&#34;&gt;&lt;a data-toggle=&#34;tab&#34; class=&#34;nav-link active&#34; href=&#34;#t12-0&#34; role=&#34;tab&#34; aria-controls=&#34;t12-0&#34; aria-selected=&#34;true&#34;&gt;Angular&lt;/a&gt;&lt;/li&gt;
	  
		&lt;li class=&#34;nav-item&#34;&gt;&lt;a data-toggle=&#34;tab&#34; class=&#34;nav-link&#34; href=&#34;#t12-1&#34; role=&#34;tab&#34; aria-controls=&#34;t12-1&#34;&gt;React&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;div class=&#34;tab-content&#34; id=&#34;t12&#34;&gt;&lt;div id=&#34;t12-0&#34; class=&#34;tab-pane show active&#34; role=&#34;tabpanel&#34; aria-labelledby=&#34;t12-0&#34;&gt;

&lt;p&gt;&lt;p&gt;Se você usa o &lt;strong&gt;npm&lt;/strong&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;npm run serve
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Se você usa o &lt;strong&gt;yarn:&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;yarn serve
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
  &lt;div id=&#34;t12-1&#34; class=&#34;tab-pane&#34; role=&#34;tabpanel&#34; aria-labelledby=&#34;t12-1&#34;&gt;

&lt;p&gt;&lt;p&gt;Se você usa o &lt;strong&gt;npm&lt;/strong&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;npm run start
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Se você usa o &lt;strong&gt;yarn:&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;yarn start
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Depois de finalizados os comando acesse no navegador o endereço da sua aplicação. Se uma tela com os componentes for renderizada tudo está funcionando corretamente.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Case Backend</title>
      <link>https://zupit.github.io/docs-beagle/pt/docs/primeiros-passos/criando-um-projeto-do-zero/case-backend/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://zupit.github.io/docs-beagle/pt/docs/primeiros-passos/criando-um-projeto-do-zero/case-backend/</guid>
      <description>
        
        
        &lt;hr&gt;
&lt;h2 id=&#34;iniciando-um-projeto-backend&#34;&gt;Iniciando um projeto Backend&lt;/h2&gt;
&lt;p&gt;Nesse tutorial será implementado o Backend com o Beagle para que ele possa responder a requisições de sua aplicação server-driven, seja ela em Android, iOS ou WEB.&lt;/p&gt;
&lt;h3 id=&#34;pré-requisitos&#34;&gt;Pré-requisitos&lt;/h3&gt;
&lt;p&gt;Para criar um projeto com o Beagle para o backend, é preciso:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;IDE Intelij IDE Community&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;passo-1-iniciar-o-projeto-usando-spring-initializr&#34;&gt;Passo 1: Iniciar o projeto usando Spring initializr&lt;/h3&gt;
&lt;p&gt;O primeiro passo para configurar seu backend é acessar o site do &lt;a href=&#34;https://start.spring.io/&#34;&gt;&lt;strong&gt;Spring&lt;/strong&gt;&lt;/a&gt;&lt;br&gt;
Ele criará o projeto &lt;code&gt;Maven&lt;/code&gt; que facilitará a configuração do seu projeto.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://lh5.googleusercontent.com/ZshvFubtunY4x0JWWBLgSmFesUx7G2AVlSrCcS96efc2lJtAakhYJ-zxgDx7CkcCMOC6zedwUAS3ThBpVXfS8jyvieNLgL3ZJIxWnHJFLE77IOXZs3UqOR8TQazINC_enzoO4Y4Q&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Configuração do Spring&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Escolha o &lt;code&gt;Maven&lt;/code&gt; como o sua opção de projeto;&lt;/li&gt;
&lt;li&gt;Marque &lt;code&gt;kotlin&lt;/code&gt; como a linguagem;&lt;/li&gt;
&lt;li&gt;Marque a versão de inicialização maior que 2.1.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Group&lt;/strong&gt; é o nome que será usado como a hierarquia do começo. Para esse exemplo, você pode deixar como &lt;strong&gt;com.example;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Artifact&lt;/strong&gt;  é o nome do projeto. Você nomeá-lo como BFF;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Description&lt;/strong&gt; contém a simples descrição do projeto;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Packaging&lt;/strong&gt;  deve ser marcado como JAR;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Java&lt;/strong&gt; deve ser marcado como a versão java do seu sistema;&lt;/li&gt;
&lt;li&gt;Clique em &lt;strong&gt;&lt;code&gt;generate&lt;/code&gt;&lt;/strong&gt; e você irá fazer o download do seu projeto no formato .zip;&lt;/li&gt;
&lt;li&gt;Extraia o arquivo na pasta de sua preferencia.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;passo-2-importar-seu-projeto-para-o-intelij&#34;&gt;Passo 2: Importar seu projeto para o Intelij&lt;/h3&gt;
&lt;p&gt;Siga os passos abaixo para importar o projeto que você criou. Primeiro, abra o &lt;strong&gt;intellij&lt;/strong&gt; e clique em&lt;code&gt;Import project&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://lh3.googleusercontent.com/EIBFU3xFKyN_ng7DsAEcdoip3xYH6gIKIbLRWbg6LRbITQMd_6tcwyp5iApKn2KPDSnasioiYyb48fMNfcEW9G3pyRE0lSXGXQHPk_FBvKO21wto8qvYSa7Jwi2eNEp5XVSxQmCQ&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Escolha o arquivo onde você colocou o seu&lt;code&gt;Spring project&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;e clique em &lt;strong&gt;&lt;code&gt;ok&lt;/code&gt;&lt;/strong&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Clique em &lt;strong&gt;Import projects from external model&lt;/strong&gt; e escolha &lt;code&gt;Maven&lt;/code&gt; e depois, clique em &lt;strong&gt;finish&lt;/strong&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&#34;https://lh6.googleusercontent.com/6gOx1UCq-ZUK0yckdUAO2-Jb1YWOjw6kNijGu8-LVPyaDJuYAC2J7DcugsKgFDVqSkhF1RN5zKQ0s47l0ZmFgrq9ln7SPL-isTczLb9h5PQnXhUyWl6S7_QaUyUPGN-SyYVK_AZC&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;configurando-o-beagle&#34;&gt;Configurando o Beagle&lt;/h2&gt;
&lt;h3 id=&#34;passo-1-configurar-o-projeto&#34;&gt;Passo 1: Configurar o projeto&lt;/h3&gt;
&lt;p&gt;Como ponto de partida, siga nosso &lt;a href=&#34;../../../../instalando-o-beagle/backend&#34;&gt;&lt;strong&gt;passo a passo para instalar o backend&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id=&#34;passo-2-definir-a-estrutura&#34;&gt;Passo 2: Definir a Estrutura&lt;/h3&gt;
&lt;p&gt;O segundo passo é criar alguns pacotes para organizar melhor o projeto. Eles serão nomeados: &lt;strong&gt;&lt;code&gt;builder&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;service&lt;/code&gt;&lt;/strong&gt; e &lt;strong&gt;&lt;code&gt;controller&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Clique em &lt;code&gt;src&lt;/code&gt; &amp;gt; &lt;code&gt;main&lt;/code&gt; &amp;gt; &lt;code&gt;kotlin&lt;/code&gt; até encontra o nome do seu projeto.&lt;/li&gt;
&lt;li&gt;Clique com o botão direito do mouse em &lt;code&gt;new&lt;/code&gt; &amp;gt; &lt;code&gt;package&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Nomeie &lt;code&gt;builder&lt;/code&gt; e aperte enter.&lt;/li&gt;
&lt;li&gt;Repita o processo criando os dois outros pacotes, nomeando-os &lt;code&gt;service&lt;/code&gt; e &lt;code&gt;controller&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Após a criação dos pacotes, a sua tela deverá estar assim:&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&#34;https://zupit.github.io/docs-beagle/docs-beagle/image%20%2829%29.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;passo-3-criar-o-serviço-da-aplicação&#34;&gt;Passo 3:‌ Criar o serviço da aplicação&lt;/h3&gt;
&lt;p&gt;A primeira classe que iremos criar é a &lt;strong&gt;&lt;code&gt;Builder&lt;/code&gt;&lt;/strong&gt; . É nesse arquivo que a tela &lt;code&gt;Server-Driven&lt;/code&gt; deve ser estruturada:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Clique no pacote &lt;code&gt;builder&lt;/code&gt; com o botão direito do mouse e clique em &lt;strong&gt;new &amp;gt; Kotlin File / Class&lt;/strong&gt; e coloque o nome como &lt;code&gt;ScreenBeagleBuilder&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Essa classe deve estender de &lt;code&gt;ScreenBuilder&lt;/code&gt; (que é uma classe interna do Beagle).&lt;/li&gt;
&lt;li&gt;Observe que ele substituirá o método de &lt;code&gt;build&lt;/code&gt; e é aqui que será implementado a primeira tela &lt;code&gt;Server-Driven&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Nesta etapa, você pode copiar e colar o código abaixo em sua classe.&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-kotlin&#34; data-lang=&#34;kotlin&#34;&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;br.com.zup.beagle.core.Style&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;br.com.zup.beagle.ext.applyStyle&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;br.com.zup.beagle.ext.unitReal&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;br.com.zup.beagle.widget.Widget&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;br.com.zup.beagle.widget.action.Alert&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;br.com.zup.beagle.widget.core.AlignSelf&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;br.com.zup.beagle.widget.core.EdgeValue&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;br.com.zup.beagle.widget.core.Flex&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;br.com.zup.beagle.widget.core.TextAlignment&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;br.com.zup.beagle.widget.layout.Container&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;br.com.zup.beagle.widget.layout.Screen&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;br.com.zup.beagle.widget.layout.ScreenBuilder&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;br.com.zup.beagle.widget.ui.ImagePath&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;br.com.zup.beagle.widget.ui.Text&lt;/span&gt;

&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;object&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;ScreenBeagleBuilder&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;ScreenBuilder&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;override&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;fun&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;build&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;Screen&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;
        &lt;span style=&#34;color:#000&#34;&gt;child&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;Container&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;
            &lt;span style=&#34;color:#000&#34;&gt;children&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;listOf&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;
                    &lt;span style=&#34;color:#000&#34;&gt;Text&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;
                            &lt;span style=&#34;color:#000&#34;&gt;text&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;Hello Beagle!&amp;#34;&lt;/span&gt;
                    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;).&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;applyStyle&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;
                            &lt;span style=&#34;color:#000&#34;&gt;Style&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;margin&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;EdgeValue&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;top&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;16.u&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;nitReal&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;()),&lt;/span&gt;
                                    &lt;span style=&#34;color:#000&#34;&gt;flex&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;Flex&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;alignSelf&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;AlignSelf&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;CENTER&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;
                            &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;
                    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;),&lt;/span&gt;
                    &lt;span style=&#34;color:#000&#34;&gt;Text&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;
                            &lt;span style=&#34;color:#000&#34;&gt;text&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;Beagle is a cross-platform framework which provides usage of the &amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;+&lt;/span&gt;
                                    &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;Server-Driven UI concept, natively in iOS, Android and Web applications. &amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;+&lt;/span&gt;
                                    &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;By using Beagle, your team could easily change application&amp;#39;s layout and&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;+&lt;/span&gt;
                                    &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34; data by just changing backend code.&amp;#34;&lt;/span&gt;
                    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;).&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;applyStyle&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;
                            &lt;span style=&#34;color:#000&#34;&gt;Style&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;margin&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;EdgeValue&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;
                                    &lt;span style=&#34;color:#000&#34;&gt;left&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;16.u&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;nitReal&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(),&lt;/span&gt;
                                    &lt;span style=&#34;color:#000&#34;&gt;right&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;16.u&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;nitReal&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(),&lt;/span&gt;
                                    &lt;span style=&#34;color:#000&#34;&gt;top&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;20.u&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;nitReal&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;()&lt;/span&gt;
                                    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;
                            &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;
                    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;
            &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;
        &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;
    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;A próxima classe a ser criada é a &lt;strong&gt;&lt;code&gt;Service&lt;/code&gt;&lt;/strong&gt;:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Clique com o botão direito do mouse no pacote &lt;code&gt;service&lt;/code&gt; e clique em &lt;strong&gt;New&amp;gt; Kotlin File / Class.&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Nomeie-a como &lt;code&gt;ScreenBeagleService&lt;/code&gt;. Essa classe deve ser anotada com &lt;code&gt;@Service&lt;/code&gt; que é uma anotação do &lt;code&gt;Spring&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Implemente&lt;/strong&gt; um método chamado de &lt;code&gt;createScreenBeagle&lt;/code&gt;que tem como retorno a classe &lt;code&gt;ScreenBeagleBuilder&lt;/code&gt;:&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-kotlin&#34; data-lang=&#34;kotlin&#34;&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;com.example.bff.builder.ScreenBeagleBuilder&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;org.springframework.stereotype.Service&lt;/span&gt;

&lt;span style=&#34;color:#5c35cc;font-weight:bold&#34;&gt;@Service&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;ScreenBeagleService&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;fun&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;createScreenBeagle&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;ScreenBeagleBuilder&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;E por fim a classe &lt;strong&gt;&lt;code&gt;Controller&lt;/code&gt;&lt;/strong&gt; .&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;No pacote &lt;code&gt;controller&lt;/code&gt;crie uma classe e nomeia como &lt;code&gt;ScreenController&lt;/code&gt; . Ela deve ser anotada com &lt;code&gt;@RestController&lt;/code&gt; para que assim exponha seus componentes por meio da API Rest.&lt;/li&gt;
&lt;li&gt;Ele receberá um &lt;code&gt;ScreenBeagleService&lt;/code&gt; por meio de seu construtor principal, para que o &lt;code&gt;Spring&lt;/code&gt; possa injetá-la para você.&lt;/li&gt;
&lt;li&gt;Crie sua classe como no exemplo abaixo:&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-kotlin&#34; data-lang=&#34;kotlin&#34;&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;com.example.bff.service.ScreenBeagleService&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;org.springframework.web.bind.annotation.GetMapping&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;org.springframework.web.bind.annotation.RestController&lt;/span&gt;

&lt;span style=&#34;color:#5c35cc;font-weight:bold&#34;&gt;@RestController&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;ScreenController&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;
        &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;private&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;val&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;screenBeagleService&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;ScreenBeagleService&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color:#5c35cc;font-weight:bold&#34;&gt;@GetMapping&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;/screen&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;fun&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;getFirstScreen&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;screenBeagleService&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;createScreenBeagle&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;()&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;A anotação &lt;code&gt;@RestController&lt;/code&gt; define esta classe como uma &lt;code&gt;controller&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;O parâmetro &lt;code&gt;screenBeagleService&lt;/code&gt; precisa ter seu tipo definido como &lt;code&gt;:ScreenBeagleService&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;O método &lt;code&gt;getScreen&lt;/code&gt; precisa anotar&lt;code&gt;@GetMapping(&amp;quot;/screen&amp;quot;)&lt;/code&gt; para criar o caminho &amp;ldquo;/screen&amp;rdquo; na  URL da aplicação e receber o resultado da função &lt;code&gt;createScreenBeagle&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;O backend está pronto para servir como BFF de sua aplicação Server-Driven.&lt;/p&gt;
&lt;h2 id=&#34;inicializando-a-aplicação&#34;&gt;Inicializando a aplicação&lt;/h2&gt;
&lt;p&gt;Agora é hora de inicializar a sua aplicação, siga os passos:&lt;/p&gt;
&lt;h3 id=&#34;passo-1-rodar-o-projeto&#34;&gt;&lt;strong&gt;Passo 1: Rodar o projeto&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;Clique no triângulo verde chamado &lt;strong&gt;&lt;code&gt;run&lt;/code&gt;&lt;/strong&gt;, ou aperte e segure SHIFT + F10 para rodar sua aplicação back-end.&lt;/p&gt;
&lt;p&gt;A sua tela estará assim:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://zupit.github.io/docs-beagle/docs-beagle/sem-titulo2.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;passo-2-fazer-uma-requisição&#34;&gt;&lt;strong&gt;Passo 2: Fazer uma requisição&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;Abra o seu browser e digite: &lt;em&gt;localhost:8080/screen&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Uma estrutura JSON tem que aparecer na sua tela similar a estrutura abaixo:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-kotlin&#34; data-lang=&#34;kotlin&#34;&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
  &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;_beagleComponent_&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;beagle:screenComponent&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
  &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;child&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;_beagleComponent_&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;beagle:container&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;children&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
      &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;_beagleComponent_&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;beagle:text&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
      &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;text&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;Hello Beagle!&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
      &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;style&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;margin&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
          &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;top&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
            &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;value&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;16.0&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
            &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;type&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;REAL&amp;#34;&lt;/span&gt;
          &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
        &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;},&lt;/span&gt;
        &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;flex&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
          &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;alignSelf&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;CENTER&amp;#34;&lt;/span&gt;
        &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
      &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;},&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
      &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;_beagleComponent_&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;beagle:text&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
      &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;text&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;Beagle is a cross-platform framework which provides usage of the Server-Driven UI concept, natively in iOS, Android and Web applications. By using Beagle, your team could easily change application&amp;#39;s layout and data by just changing backend code.&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
      &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;style&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;margin&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
          &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;left&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
            &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;value&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;16.0&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
            &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;type&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;REAL&amp;#34;&lt;/span&gt;
          &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;},&lt;/span&gt;
          &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;top&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
            &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;value&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;20.0&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
            &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;type&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;REAL&amp;#34;&lt;/span&gt;
          &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;},&lt;/span&gt;
          &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;right&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
            &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;value&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;16.0&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
            &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;type&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;REAL&amp;#34;&lt;/span&gt;
          &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
        &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
      &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;]&lt;/span&gt;
  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;passo-3-checar-o-processo&#34;&gt;&lt;strong&gt;Passo 3: Checar o processo&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;Se essa não for a resposta que você teve é necessário checar o processo de configuração novamente. Volte os passos anteriores e comece pelas classes que são as que apresentam maiores equívocos quando configuradas pela primeira vez.&lt;/p&gt;
&lt;p&gt;Ou, se preferir, pegue o projeto pronto no nosso repositório e compare com o seu. Você pode acessar o &lt;a href=&#34;https://github.com/ZupIT/beagle/tree/master/backend/sample&#34;&gt;&lt;strong&gt;repositório aqui.&lt;/strong&gt; &lt;/a&gt;&lt;/p&gt;


&lt;div class=&#34;alert alert-info&#34; role=&#34;alert&#34;&gt;

Para que o serviço de backend seja consumido, você deve ter o front-end preparado para o Beagle, seja Android, iOS ou Web. Tudo irá funcionar usando o mesmo JSON do backend.
&lt;/div&gt;

&lt;p&gt;Para saber mais sobre como configurar o seu ambiente frontend, veja mais em:&lt;/p&gt;
&lt;p&gt;👉 Tutorial do Beagle para &lt;a href=&#34;case-android/&#34;&gt;&lt;strong&gt;Android&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;👉Tutorial do Beagle para &lt;a href=&#34;../../usando-o-beagle/ios&#34;&gt;&lt;strong&gt;iOS&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;👉Tutorial do Beagle para  &lt;a href=&#34;case-web&#34;&gt;&lt;strong&gt;Web&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt;

      </description>
    </item>
    
  </channel>
</rss>
